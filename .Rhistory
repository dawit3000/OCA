linetype = 3, color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], V[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red", "W" = "blue", "V + W" = "green", "W" = "blue", "V" = "purple", "W - V" = "orange")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dotted")) +  # Ensure V and W are solid lines, W-V is dotted
# Ensure the line from W to V+W is dotted and keep it red
geom_segment(aes(x = W[1], y = W[2], xend = V_sum_W[1], yend = V_sum_W[2]),
linetype = "dotted", color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], W[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red",
library(ggplot2)
# Define vectors
V <- c(3, 2)
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], W[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red", "W" = "blue", "V + W" = "green", "W" = "blue", "V" = "purple", "W - V" = "orange")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dotted")) +  # Ensure V and W are solid lines, W-V is dotted
# Make sure the line from W to V+W is dotted and keep it red
geom_segment(aes(x = W[1], y = W[2], xend = V_sum_W[1], yend = V_sum_W[2]),
linetype = "dotted", color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], W[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red", "W" = "blue", "V + W" = "green", "W" = "blue", "V" = "purple", "W - V" = "orange")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dotted")) +  # Ensure V and W are solid lines, W-V is dotted
# Make sure the line from W to V+W is dotted and keep it red
geom_segment(aes(x = W[1], y = W[2], xend = V_sum_W[1], yend = V_sum_W[2]),
linetype = "dotted", color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], W[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red", "W" = "blue", "V + W" = "green", "W" = "blue", "V" = "purple", "W - V" = "orange")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dotted")) +  # Ensure V and W are solid lines, W-V is dotted
# Make sure the line from W to V+W is dotted and keep it red
geom_segment(aes(x = W[1], y = W[2], xend = V_sum_W[1], yend = V_sum_W[2]),
linetype = "dotted", color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], W[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red",
library(ggplot2)
# Define vectors
V <- c(3, 2)
library(ggplot2)
# Define vectors
V <- c(3, 2)
W <- c(1, 4)
V_sum_W <- V + W
W_minus_V <- W - V  # Calculate W - V
# Create a data frame for plotting the vectors and parallelogram sides
vectors <- data.frame(
x = c(0, 0, 0, V[1], W[1], W[1]),
y = c(0, 0, 0, V[2], W[2], W[2]),
xend = c(V[1], W[1], V_sum_W[1], V_sum_W[1], V_sum_W[1], V[1]),  # Add W-V line end
yend = c(V[2], W[2], V_sum_W[2], V_sum_W[2], V_sum_W[2], V[2]),  # Add W-V line end
type = c("V", "W", "V + W", "W", "V", "W - V")  # Add label for W-V
)
# Define label positions for V + W at 3/4 length
label_positions <- data.frame(
type = c("V + W"),
x = c(0.75 * V_sum_W[1]),
y = c(0.75 * V_sum_W[2])
)
# Plot
ggplot() +
geom_segment(data = vectors, aes(x = x, y = y, xend = xend, yend = yend, color = type, linetype = type),
arrow = arrow(type = "closed", length = unit(0.2, "inches")), size = 1.2) +
geom_point(aes(x = 0, y = 0), size = 3) +  # Mark origin
geom_text(data = vectors[vectors$type != "V + W", ], aes(x = (x + xend) / 2, y = (y + yend) / 2, label = type, color = type),
size = 6, fontface = "bold", vjust = -1) +  # Exclude the V + W label at midpoint
geom_text(data = label_positions, aes(x = x, y = y, label = "V + W"), size = 6, fontface = "bold", color = "green", vjust = -1) +  # Label for V + W at 3/4 length
scale_color_manual(values = c("V" = "red", "W" = "blue", "V + W" = "green", "W" = "blue", "V" = "purple", "W - V" = "orange")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed")) +  # Ensure V and W are solid lines
# Ensure the line from W to V+W is dashed and keep it red
geom_segment(aes(x = W[1], y = W[2], xend = V_sum_W[1], yend = V_sum_W[2]),
linetype = "dashed", color = "red", size = 1.2, arrow = arrow(type = "closed", length = unit(0.2, "inches"))) +
xlim(min(0, V[1], W[1], V_sum_W[1]) - 1, max(0, V[1], W[1], V_sum_W[1]) + 1) +
ylim(min(0, V[2], W[2], V_sum_W[2]) - 1, max(0, V[2], W[2], V_sum_W[2]) + 1) +
theme_minimal() +
labs(title = "Vector Addition and Parallelogram: V, W, V + W",
x = "X-axis", y = "Y-axis") +
theme(legend.position = "none")  # Remove legend
# Calculate eigenvalues and eigenvectors
eigen_result <- eigen(A)
A <- matrix(c(4, 1, 1, 3), nrow = 2, byrow = TRUE)
print(A)
# Calculate eigenvalues and eigenvectors
eigen_result <- eigen(A)
eigen_result
# Replace with your actual file path
df <- read.csv("C:/path/to/your/schedule.csv", stringsAsFactors = FALSE)
setwd("C:/Users/dawit/Desktop/TESTER")
# Replace with your actual file path
df <- read.csv("C:/path/to/your/schedule.csv", stringsAsFactors = FALSE)
setwd("C:/Users/dawit/Desktop/TESTER")
# Replace with your actual file path
df <- read.csv("C:/Users/dawit/Desktop/TESTER/schedule.csv", stringsAsFactors = FALSE)
# Then run your real function
ol_comp_summary(
schedule_df = df,
L = 4,
U = 9,
rate_per_cr = 2500 / 3,
reg_load = 12
)
library(crosstalk)
# Replace with your actual file path
df <- read.csv("C:/Users/dawit/Desktop/TESTER/schedule.csv", stringsAsFactors = FALSE)
# Then run your real function
ol_comp_summary(
schedule_df = df,
L = 4,
U = 9,
rate_per_cr = 2500 / 3,
reg_load = 12
)
setwd("C:/Users/dawit/Desktop/my_shiny_app")
shiny::runApp()
shiny::runApp("C:/Users/dawit/Desktop/my_shiny_app")
lapply(list.files("R", full.names = TRUE), source)
exists("ol_comp_summary")  # Should return TRUE
shiny::runApp()
setwd("C:/Users/dawit/Desktop/my_shiny_app")
str(comp_data())
setwd("C:/Users/dawit/Desktop/my_shiny_app")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("C:/Users/dawit/Documents/catool_shinyApp")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
detach("package:catool", unload = TRUE, character.only = TRUE)
remove.packages("catool")
devtools::install_github("dawit3000/catool", force = TRUE)
args(catool::filter_schedule)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
detach("package:catool", unload = TRUE, character.only = TRUE)
if ("catool" %in% rownames(installed.packages())) {
remove.packages("catool")
}
remove.packages("catool")
install.packages("remotes")  # if not already installed
remotes::install_github("dawit3000/catool", force = TRUE, upgrade = "never")
args(catool::filter_schedule)
shiny::runApp()
library(catool)
library(catool)
library(catool)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
catool::run_catool_app()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
setwd("C:/Users/dawit/Documents/OLC_shinyApp")
runApp()
runApp()
source("app.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyWidgets")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
setwd("C:/Users/dawit/Documents/OCA_shinyApp")
